// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relações CORRIGIDAS - adicionar financialGoals
  transactions   Transaction[]
  categories     Category[]
  financialGoals FinancialGoal[] // RELAÇÃO ADICIONADA AQUI
}

model Transaction {
  id          Int      @id @default(autoincrement())
  description String
  amount      Float
  type        String // 'income' ou 'expense'
  date        DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relações
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  type      String // 'income' ou 'expense'
  color     String?
  icon      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relações
  userId       Int
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]
}

model FinancialGoal {
  id            Int       @id @default(autoincrement())
  title         String
  targetAmount  Float
  currentAmount Float     @default(0)
  deadline      DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relações
  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
